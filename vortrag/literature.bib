@misc{WhyRust,
  author = {Rust Website},
  title = {{Why Rust?}},
  howpublished = "\url{https://www.rust-lang.org/}",
  note = "[abgerufen am 29.08.2022]",
  language = {ngerman}
}

@misc{FachgruppeDef,
  author = {Fachgruppe Computeralgebra},
  title = {{Was ist Computeralgebra?}},
  howpublished = "\url{https://fachgruppe-computeralgebra.de/computeralgebra/}",
  note = "[abgerufen am 18.07.2022]",
  language = {ngerman}
}

@article{SympyPeerJ,
  language = {ngerman},
  title = {SymPy: symbolic computing in Python},
  author = "Aaron Meurer and Christopher P. Smith and Mateusz Paprocki and Ondřej Čertík and Sergey B. Kirpichev and Matthew Rocklin and AMiT Kumar and Sergiu Ivanov and Jason K. Moore and Sartaj Singh and Thilina Rathnayake and Sean Vig and Brian E. Granger and Richard P. Muller and Francesco Bonazzi and Harsh Gupta and Shivam Vats and Fredrik Johansson and Fabian Pedregosa and Matthew J. Curry and Andy R. Terrel and Štěpán Roučka and Ashutosh Saboo and Isuru Fernando and Sumith Kulal and Robert Cimrman and Anthony Scopatz",
  year = 2017,
  month = jan,
  keywords = {Python, Computer algebra system, Symbolics},
  abstract = {
              SymPy is an open source computer algebra system written in pure Python. It is built with a focus on extensibility and ease of use, through both interactive and programmatic applications. These characteristics have led SymPy to become a popular symbolic library for the scientific Python ecosystem. This paper presents the architecture of SymPy, a description of its features, and a discussion of select submodules. The supplementary material provide additional examples and further outline details of the architecture and features of SymPy.
          },
  volume = 3,
  pages = {e103},
  journal = {PeerJ Computer Science},
  issn = {2376-5992},
  url = {https://doi.org/10.7717/peerj-cs.103},
  doi = {10.7717/peerj-cs.103}
}
@misc{Geddes2007,
	AUTHOR = {Geddes, Keith O. AND Czapor, Stephen R. AND Labahn, George},
	YEAR = {2007},
	TITLE = {Algorithms for Computer Algebra - },
	EDITION = {},
	ISBN = {978-0-585-33247-5},
	PUBLISHER = {Springer Science & Business Media},
	ADDRESS = {Berlin Heidelberg},
  language = {ngerman}
}
@misc{Tan2000,
	AUTHOR = {Tan, Kiat Shi AND Steeb, Willi-Hans AND Hardy, Yorick},
	YEAR = {2000},
	TITLE = {SymbolicC++: An Introduction to Computer Algebra using Object-Oriented Programming},
	EDITION = {},
	ISBN = {978-1-852-33260-0},
	PUBLISHER = {Springer Science & Business Media},
	ADDRESS = {Berlin Heidelberg},
  language = {ngerman}
}
@book{SK19,
  author = {Sharma, Rahul and Kaihlavirta, Vesa},
  booktitle = { Mastering RUST },
  edition = { Second Edition },
  isbn = {978-1-78934-657-2},
  publisher = { Packt Publishing Ltd. },
  publisherplace = {UK},
  title = {Mastering RUST},
  year = 2019,
  language = {ngerman}
}
@misc{JavaGenerics,
  author = {Oracle},
  title = {{Type Erasure}},
  howpublished = "\url{https://docs.oracle.com/javase/tutorial/java/generics/erasure.html}",
  note = "[abgerufen am 18.07.2022]",
  language = {ngerman}
}
@book{BO18,
  author = {Blandy, Jim and Orendorff, Jason},
  booktitle = { Programming Rust },
  edition = { 1. },
  isbn = {978-1-491-92728-1},
  publisher = { O'Reilly Media, Inc },
  publisherplace = {USA},
  title = {Programming Rust: Fast, Safe Systems Development},
  year = 2018,
  language = {ngerman}
}
@inbook{TraitBoundariesEx, 
  place={San Francisco}, 
  title={Using Trait Objects That Allow for Values of Different Types},
  booktitle={The rust programming language}, 
  publisher={No Starch Press}, 
  author={Klabnik, Steve and Nichols, Carol},
  year={2019},
  chapter={Using Trait Objects That Allow for Values of Different Types},
  isbn={9781718500440},
  language = {ngerman}
}